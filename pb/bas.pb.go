// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.8
// source: bas.proto

package pb

import (
	context "context"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//产品通用
type BasProductsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  int32  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	//bool data = 3;
	Code    int32  `protobuf:"varint,4,opt,name=code,proto3" json:"code,omitempty"`
	Error   string `protobuf:"bytes,5,opt,name=error,proto3" json:"error,omitempty"`
	Details bool   `protobuf:"varint,6,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *BasProductsResponse) Reset() {
	*x = BasProductsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bas_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BasProductsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BasProductsResponse) ProtoMessage() {}

func (x *BasProductsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bas_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BasProductsResponse.ProtoReflect.Descriptor instead.
func (*BasProductsResponse) Descriptor() ([]byte, []int) {
	return file_bas_proto_rawDescGZIP(), []int{0}
}

func (x *BasProductsResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *BasProductsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *BasProductsResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *BasProductsResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *BasProductsResponse) GetDetails() bool {
	if x != nil {
		return x.Details
	}
	return false
}

//产品列表
type BasProductsListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//每页多少个
	PageSize int32 `protobuf:"varint,100,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	//页码
	PageNumber int32 `protobuf:"varint,101,opt,name=pageNumber,proto3" json:"pageNumber,omitempty"`
	//排序字段
	OrderKey string `protobuf:"bytes,102,opt,name=orderKey,proto3" json:"orderKey,omitempty"`
	//排序方式
	OrderSort string `protobuf:"bytes,103,opt,name=orderSort,proto3" json:"orderSort,omitempty"`
}

func (x *BasProductsListRequest) Reset() {
	*x = BasProductsListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bas_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BasProductsListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BasProductsListRequest) ProtoMessage() {}

func (x *BasProductsListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bas_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BasProductsListRequest.ProtoReflect.Descriptor instead.
func (*BasProductsListRequest) Descriptor() ([]byte, []int) {
	return file_bas_proto_rawDescGZIP(), []int{1}
}

func (x *BasProductsListRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *BasProductsListRequest) GetPageNumber() int32 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *BasProductsListRequest) GetOrderKey() string {
	if x != nil {
		return x.OrderKey
	}
	return ""
}

func (x *BasProductsListRequest) GetOrderSort() string {
	if x != nil {
		return x.OrderSort
	}
	return ""
}

type BasProductsListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  int32  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	//BasProductsList data = 3;
	Code    int32            `protobuf:"varint,4,opt,name=code,proto3" json:"code,omitempty"`
	Error   string           `protobuf:"bytes,5,opt,name=error,proto3" json:"error,omitempty"`
	Details *BasProductsList `protobuf:"bytes,6,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *BasProductsListResponse) Reset() {
	*x = BasProductsListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bas_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BasProductsListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BasProductsListResponse) ProtoMessage() {}

func (x *BasProductsListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bas_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BasProductsListResponse.ProtoReflect.Descriptor instead.
func (*BasProductsListResponse) Descriptor() ([]byte, []int) {
	return file_bas_proto_rawDescGZIP(), []int{2}
}

func (x *BasProductsListResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *BasProductsListResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *BasProductsListResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *BasProductsListResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *BasProductsListResponse) GetDetails() *BasProductsList {
	if x != nil {
		return x.Details
	}
	return nil
}

type BasProductsList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//总数
	Total int32 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	//列表
	List []*BasProductsOneRequest `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *BasProductsList) Reset() {
	*x = BasProductsList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bas_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BasProductsList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BasProductsList) ProtoMessage() {}

func (x *BasProductsList) ProtoReflect() protoreflect.Message {
	mi := &file_bas_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BasProductsList.ProtoReflect.Descriptor instead.
func (*BasProductsList) Descriptor() ([]byte, []int) {
	return file_bas_proto_rawDescGZIP(), []int{3}
}

func (x *BasProductsList) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *BasProductsList) GetList() []*BasProductsOneRequest {
	if x != nil {
		return x.List
	}
	return nil
}

//产品结构
type BasProductsOneRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//
	CreatedAt string `protobuf:"bytes,2,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	//
	UpdatedAt string `protobuf:"bytes,3,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	//
	DeletedAt string `protobuf:"bytes,4,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`
	//
	Code string `protobuf:"bytes,5,opt,name=code,proto3" json:"code,omitempty"`
	//
	Price int32 `protobuf:"varint,6,opt,name=price,proto3" json:"price,omitempty"`
}

func (x *BasProductsOneRequest) Reset() {
	*x = BasProductsOneRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bas_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BasProductsOneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BasProductsOneRequest) ProtoMessage() {}

func (x *BasProductsOneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bas_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BasProductsOneRequest.ProtoReflect.Descriptor instead.
func (*BasProductsOneRequest) Descriptor() ([]byte, []int) {
	return file_bas_proto_rawDescGZIP(), []int{4}
}

func (x *BasProductsOneRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BasProductsOneRequest) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *BasProductsOneRequest) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *BasProductsOneRequest) GetDeletedAt() string {
	if x != nil {
		return x.DeletedAt
	}
	return ""
}

func (x *BasProductsOneRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *BasProductsOneRequest) GetPrice() int32 {
	if x != nil {
		return x.Price
	}
	return 0
}

//产品详情
type BasProductsIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *BasProductsIdRequest) Reset() {
	*x = BasProductsIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bas_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BasProductsIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BasProductsIdRequest) ProtoMessage() {}

func (x *BasProductsIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bas_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BasProductsIdRequest.ProtoReflect.Descriptor instead.
func (*BasProductsIdRequest) Descriptor() ([]byte, []int) {
	return file_bas_proto_rawDescGZIP(), []int{5}
}

func (x *BasProductsIdRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type BasProductsDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  int32  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	//BasProductsOneRequest data = 3;
	Code    int32                  `protobuf:"varint,4,opt,name=code,proto3" json:"code,omitempty"`
	Error   string                 `protobuf:"bytes,5,opt,name=error,proto3" json:"error,omitempty"`
	Details *BasProductsOneRequest `protobuf:"bytes,6,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *BasProductsDetailResponse) Reset() {
	*x = BasProductsDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bas_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BasProductsDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BasProductsDetailResponse) ProtoMessage() {}

func (x *BasProductsDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bas_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BasProductsDetailResponse.ProtoReflect.Descriptor instead.
func (*BasProductsDetailResponse) Descriptor() ([]byte, []int) {
	return file_bas_proto_rawDescGZIP(), []int{6}
}

func (x *BasProductsDetailResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *BasProductsDetailResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *BasProductsDetailResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *BasProductsDetailResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *BasProductsDetailResponse) GetDetails() *BasProductsOneRequest {
	if x != nil {
		return x.Details
	}
	return nil
}

var File_bas_proto protoreflect.FileDescriptor

var file_bas_proto_rawDesc = []byte{
	0x0a, 0x09, 0x62, 0x61, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x1a,
	0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8b, 0x01,
	0x0a, 0x13, 0x42, 0x61, 0x73, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x8e, 0x01, 0x0a, 0x16,
	0x42, 0x61, 0x73, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x18, 0x64, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x65, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x18, 0x66,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x12, 0x1c,
	0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x6f, 0x72, 0x74, 0x18, 0x67, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x6f, 0x72, 0x74, 0x22, 0xa4, 0x01, 0x0a,
	0x17, 0x42, 0x61, 0x73, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x2d, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x61, 0x73, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x22, 0x56, 0x0a, 0x0f, 0x42, 0x61, 0x73, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2d, 0x0a, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x62, 0x2e,
	0x42, 0x61, 0x73, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x4f, 0x6e, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xab, 0x01, 0x0a, 0x15,
	0x42, 0x61, 0x73, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x4f, 0x6e, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x22, 0x26, 0x0a, 0x14, 0x42, 0x61, 0x73,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69,
	0x64, 0x22, 0xac, 0x01, 0x0a, 0x19, 0x42, 0x61, 0x73, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x33, 0x0a, 0x07, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70,
	0x62, 0x2e, 0x42, 0x61, 0x73, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x4f, 0x6e, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x32, 0x8b, 0x04, 0x0a, 0x03, 0x42, 0x61, 0x73, 0x12, 0x65, 0x0a, 0x0f, 0x42, 0x61, 0x73, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1a, 0x2e, 0x70, 0x62,
	0x2e, 0x42, 0x61, 0x73, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x61, 0x73,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x12, 0x11, 0x2f, 0x62,
	0x61, 0x73, 0x2f, 0x62, 0x61, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x12,
	0x6c, 0x0a, 0x11, 0x42, 0x61, 0x73, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x12, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x61, 0x73, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x73, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d,
	0x2e, 0x70, 0x62, 0x2e, 0x42, 0x61, 0x73, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x18, 0x12, 0x16, 0x2f, 0x62, 0x61, 0x73, 0x2f, 0x62, 0x61, 0x73, 0x2f,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x65, 0x0a,
	0x11, 0x42, 0x61, 0x73, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x12, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x61, 0x73, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x73, 0x4f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e,
	0x70, 0x62, 0x2e, 0x42, 0x61, 0x73, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x22, 0x11,
	0x2f, 0x62, 0x61, 0x73, 0x2f, 0x62, 0x61, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x73, 0x3a, 0x01, 0x2a, 0x12, 0x65, 0x0a, 0x11, 0x42, 0x61, 0x73, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x73, 0x4d, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x42,
	0x61, 0x73, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x4f, 0x6e, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x61, 0x73, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x16, 0x1a, 0x11, 0x2f, 0x62, 0x61, 0x73, 0x2f, 0x62, 0x61, 0x73, 0x2f,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0x61, 0x0a, 0x11, 0x42,
	0x61, 0x73, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x12, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x61, 0x73, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x73, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x70, 0x62, 0x2e,
	0x42, 0x61, 0x73, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x2a, 0x11, 0x2f, 0x62, 0x61,
	0x73, 0x2f, 0x62, 0x61, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x42, 0x07,
	0x5a, 0x05, 0x2e, 0x2f, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bas_proto_rawDescOnce sync.Once
	file_bas_proto_rawDescData = file_bas_proto_rawDesc
)

func file_bas_proto_rawDescGZIP() []byte {
	file_bas_proto_rawDescOnce.Do(func() {
		file_bas_proto_rawDescData = protoimpl.X.CompressGZIP(file_bas_proto_rawDescData)
	})
	return file_bas_proto_rawDescData
}

var file_bas_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_bas_proto_goTypes = []interface{}{
	(*BasProductsResponse)(nil),       // 0: pb.BasProductsResponse
	(*BasProductsListRequest)(nil),    // 1: pb.BasProductsListRequest
	(*BasProductsListResponse)(nil),   // 2: pb.BasProductsListResponse
	(*BasProductsList)(nil),           // 3: pb.BasProductsList
	(*BasProductsOneRequest)(nil),     // 4: pb.BasProductsOneRequest
	(*BasProductsIdRequest)(nil),      // 5: pb.BasProductsIdRequest
	(*BasProductsDetailResponse)(nil), // 6: pb.BasProductsDetailResponse
}
var file_bas_proto_depIdxs = []int32{
	3, // 0: pb.BasProductsListResponse.details:type_name -> pb.BasProductsList
	4, // 1: pb.BasProductsList.list:type_name -> pb.BasProductsOneRequest
	4, // 2: pb.BasProductsDetailResponse.details:type_name -> pb.BasProductsOneRequest
	1, // 3: pb.Bas.BasProductsList:input_type -> pb.BasProductsListRequest
	5, // 4: pb.Bas.BasProductsDetail:input_type -> pb.BasProductsIdRequest
	4, // 5: pb.Bas.BasProductsCreate:input_type -> pb.BasProductsOneRequest
	4, // 6: pb.Bas.BasProductsMotify:input_type -> pb.BasProductsOneRequest
	5, // 7: pb.Bas.BasProductsDelete:input_type -> pb.BasProductsIdRequest
	2, // 8: pb.Bas.BasProductsList:output_type -> pb.BasProductsListResponse
	6, // 9: pb.Bas.BasProductsDetail:output_type -> pb.BasProductsDetailResponse
	0, // 10: pb.Bas.BasProductsCreate:output_type -> pb.BasProductsResponse
	0, // 11: pb.Bas.BasProductsMotify:output_type -> pb.BasProductsResponse
	0, // 12: pb.Bas.BasProductsDelete:output_type -> pb.BasProductsResponse
	8, // [8:13] is the sub-list for method output_type
	3, // [3:8] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_bas_proto_init() }
func file_bas_proto_init() {
	if File_bas_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_bas_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BasProductsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bas_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BasProductsListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bas_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BasProductsListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bas_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BasProductsList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bas_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BasProductsOneRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bas_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BasProductsIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bas_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BasProductsDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bas_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_bas_proto_goTypes,
		DependencyIndexes: file_bas_proto_depIdxs,
		MessageInfos:      file_bas_proto_msgTypes,
	}.Build()
	File_bas_proto = out.File
	file_bas_proto_rawDesc = nil
	file_bas_proto_goTypes = nil
	file_bas_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// BasClient is the client API for Bas service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BasClient interface {
	//产品列表
	BasProductsList(ctx context.Context, in *BasProductsListRequest, opts ...grpc.CallOption) (*BasProductsListResponse, error)
	//产品详情
	BasProductsDetail(ctx context.Context, in *BasProductsIdRequest, opts ...grpc.CallOption) (*BasProductsDetailResponse, error)
	//产品创建
	BasProductsCreate(ctx context.Context, in *BasProductsOneRequest, opts ...grpc.CallOption) (*BasProductsResponse, error)
	//产品修改
	BasProductsMotify(ctx context.Context, in *BasProductsOneRequest, opts ...grpc.CallOption) (*BasProductsResponse, error)
	//产品删除
	BasProductsDelete(ctx context.Context, in *BasProductsIdRequest, opts ...grpc.CallOption) (*BasProductsResponse, error)
}

type basClient struct {
	cc grpc.ClientConnInterface
}

func NewBasClient(cc grpc.ClientConnInterface) BasClient {
	return &basClient{cc}
}

func (c *basClient) BasProductsList(ctx context.Context, in *BasProductsListRequest, opts ...grpc.CallOption) (*BasProductsListResponse, error) {
	out := new(BasProductsListResponse)
	err := c.cc.Invoke(ctx, "/pb.Bas/BasProductsList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *basClient) BasProductsDetail(ctx context.Context, in *BasProductsIdRequest, opts ...grpc.CallOption) (*BasProductsDetailResponse, error) {
	out := new(BasProductsDetailResponse)
	err := c.cc.Invoke(ctx, "/pb.Bas/BasProductsDetail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *basClient) BasProductsCreate(ctx context.Context, in *BasProductsOneRequest, opts ...grpc.CallOption) (*BasProductsResponse, error) {
	out := new(BasProductsResponse)
	err := c.cc.Invoke(ctx, "/pb.Bas/BasProductsCreate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *basClient) BasProductsMotify(ctx context.Context, in *BasProductsOneRequest, opts ...grpc.CallOption) (*BasProductsResponse, error) {
	out := new(BasProductsResponse)
	err := c.cc.Invoke(ctx, "/pb.Bas/BasProductsMotify", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *basClient) BasProductsDelete(ctx context.Context, in *BasProductsIdRequest, opts ...grpc.CallOption) (*BasProductsResponse, error) {
	out := new(BasProductsResponse)
	err := c.cc.Invoke(ctx, "/pb.Bas/BasProductsDelete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BasServer is the server API for Bas service.
type BasServer interface {
	//产品列表
	BasProductsList(context.Context, *BasProductsListRequest) (*BasProductsListResponse, error)
	//产品详情
	BasProductsDetail(context.Context, *BasProductsIdRequest) (*BasProductsDetailResponse, error)
	//产品创建
	BasProductsCreate(context.Context, *BasProductsOneRequest) (*BasProductsResponse, error)
	//产品修改
	BasProductsMotify(context.Context, *BasProductsOneRequest) (*BasProductsResponse, error)
	//产品删除
	BasProductsDelete(context.Context, *BasProductsIdRequest) (*BasProductsResponse, error)
}

// UnimplementedBasServer can be embedded to have forward compatible implementations.
type UnimplementedBasServer struct {
}

func (*UnimplementedBasServer) BasProductsList(context.Context, *BasProductsListRequest) (*BasProductsListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BasProductsList not implemented")
}
func (*UnimplementedBasServer) BasProductsDetail(context.Context, *BasProductsIdRequest) (*BasProductsDetailResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BasProductsDetail not implemented")
}
func (*UnimplementedBasServer) BasProductsCreate(context.Context, *BasProductsOneRequest) (*BasProductsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BasProductsCreate not implemented")
}
func (*UnimplementedBasServer) BasProductsMotify(context.Context, *BasProductsOneRequest) (*BasProductsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BasProductsMotify not implemented")
}
func (*UnimplementedBasServer) BasProductsDelete(context.Context, *BasProductsIdRequest) (*BasProductsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BasProductsDelete not implemented")
}

func RegisterBasServer(s *grpc.Server, srv BasServer) {
	s.RegisterService(&_Bas_serviceDesc, srv)
}

func _Bas_BasProductsList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BasProductsListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BasServer).BasProductsList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Bas/BasProductsList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BasServer).BasProductsList(ctx, req.(*BasProductsListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bas_BasProductsDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BasProductsIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BasServer).BasProductsDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Bas/BasProductsDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BasServer).BasProductsDetail(ctx, req.(*BasProductsIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bas_BasProductsCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BasProductsOneRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BasServer).BasProductsCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Bas/BasProductsCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BasServer).BasProductsCreate(ctx, req.(*BasProductsOneRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bas_BasProductsMotify_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BasProductsOneRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BasServer).BasProductsMotify(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Bas/BasProductsMotify",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BasServer).BasProductsMotify(ctx, req.(*BasProductsOneRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bas_BasProductsDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BasProductsIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BasServer).BasProductsDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Bas/BasProductsDelete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BasServer).BasProductsDelete(ctx, req.(*BasProductsIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Bas_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Bas",
	HandlerType: (*BasServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "BasProductsList",
			Handler:    _Bas_BasProductsList_Handler,
		},
		{
			MethodName: "BasProductsDetail",
			Handler:    _Bas_BasProductsDetail_Handler,
		},
		{
			MethodName: "BasProductsCreate",
			Handler:    _Bas_BasProductsCreate_Handler,
		},
		{
			MethodName: "BasProductsMotify",
			Handler:    _Bas_BasProductsMotify_Handler,
		},
		{
			MethodName: "BasProductsDelete",
			Handler:    _Bas_BasProductsDelete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "bas.proto",
}
