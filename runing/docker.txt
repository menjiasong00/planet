1、搭建本地镜像仓库
docker run -d -p 5000:5000 -v /myregistry:/var/lib/registry registry:2

2、在runing目录下创建dockerFile： app.df

3、在主项目目录下打包交叉编译项目包
CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o running/app .

4、在runing目录下创建镜像
docker build -f app.df -t myapp:latest .


5、把镜像打tag变成和仓库一致
docker tag  myapp:lastest 127.0.0.1:5000/myapp:lastest


6、推到镜像上去
docker push 127.0.0.1:5000/myapp:lastest

以下是3-4-5-6的合并脚本：
（
CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o deploy/app .
docker build -f deploy/app.df -t app:latest .
docker tag app:latest harbor01.wondershare.cn/wos/app:latest
docker push harbor01.wondershare.cn/wos/app:latest
）

7、检查发现镜像已经在仓库
http://127.0.0.1:5000/v2/_catalog 

8、拉下镜像
docker pull 127.0.0.1:5000/myapp:last

9、可以用compose  docker.yaml:
version: "3.7"

services:
  app:
    image: testapp:latest
    container_name: app
    hostname: app
    ports:
      - "50051:50051"
    command: ./app -server=app -profile=dev -grpc-port=50051
    networks:
      - elastic-jaeger
  ogs:
    image: testapp:latest
    container_name: ogs
    hostname: ogs
    ports:
      - "50052:50052"
    command: ./app -server=ogs -profile=dev -grpc-port=50052
    networks:
      - elastic-jaeger
networks:
  elastic-jaeger:
    driver: bridge


10、拉取
docker-compose -f docker.yaml pull

11、运行
docker-compose -f docker.yaml up

12、配置可视化监控 portainer

